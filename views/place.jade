extends ./_layouts/weather

block append styles
  meta(property="og:image", content="https://c2.staticflickr.com/8/7724/26987380802_dc156534d3_z.jpg")

//- block append left_content
//-   .group
//-     // Ournet weather left
//-     ins.adsbygoogle(style='display:block', data-ad-client='ca-pub-3959589883092051', data-ad-slot='5696383432', data-ad-format='auto')
//-     script.
//-       (adsbygoogle = window.adsbygoogle || []).push({});

block top_weather_content
  .pull-right
    .social-likes(data-url=site.head.canonical)
      each item in config.shareDataServices
        div(class=item)

block weather_content
  .page-title
    h1= title
    h2.sub-title= site.head.description
  include _includes/flex-report
  #content-bottom

  if (reportDays!==10)
    p.text-center
      strong
        a(href=links.weather.placeDays(place.id,10,{ul:currentCulture.language}))= __('weather_for_10days')
          |   Â»
  else
    .social-likes(data-url=site.head.canonical)
      each item in config.shareDataServices
        div(class=item)


block prepend right_content_top
  if (latestStories && latestStories.length>0)
    .group.view-stories
      .group-title
        h4= __('latest_news')
      .group-content
        .list.ot-news
          each story, i in latestStories
            if (i < 4)
              .list-item
                .item.ot-news.clearfix
                  a.media(href=links.news.$schema+'//'+links.news.$host + links.news.story(story.uniqueName, story.id, {ul:currentCulture.language}))
                    .media-left
                      img.media-object(alt='', src=(Links.cdn.wi.stories('square', story.imageId)))
                    .media-body= story.title
                      //- .details= util.moment(new Date(story.date)).format('LT')

block append scripts
  if (config.oneSignal)
    script(src='https://cdn.onesignal.com/sdks/OneSignalSDK.js', async)
    script.
      var OneSignal = window.OneSignal || [];
      var category='notifications-weather';

      $('.c-subscribe-bar__btn').click(function(event) {
        event.preventDefault();
        event.stopPropagation();
        ga('send', 'event', category, 'click-subscribe-btn');
        subscribeToNotifications();
      });

      function subscribeToNotifications() {
        OneSignal.registerForPushNotifications();
        ga('send', 'event', category, 'show-register-native');
      }

      function hideSubscribe() {
        $('.c-subscribe-bar').addClass('hidden');
      }
      function showSubscribe() {
        $('.c-subscribe-bar').removeClass('hidden');
      }

      OneSignal.push(['init', {
        appId: "#{config.oneSignal.appId}",
        autoRegister: false,
        persistNotification: false,
        notifyButton: {
          enable: true,
          showCredit: false,
          prenotify: true
        },
        welcomeNotification: {
          disable: true
        },
        safari_web_id: "#{config.oneSignal.safari_web_id}"
      }]);
      OneSignal.push(function() {
        OneSignal.on('notificationPermissionChange', function(permissionChange) {
          var currentPermission = permissionChange.to;
          if (currentPermission === 'granted') {
            OneSignal.sendTag('place-id', '#{place.id}');
          }
          ga('send', 'event', category, currentPermission);
        });
        // Occurs when the user's subscription changes to a new value.
        OneSignal.on('subscriptionChange', function (isSubscribed) {
          if (isSubscribed) {
            hideSubscribe();
            OneSignal.sendTag('place-id', '#{place.id}');
          }else{
            showSubscribe();
          }
        });

        // If we're on an unsupported browser, do nothing
        if (OneSignal.isPushNotificationsSupported()) {
          showSubscribe();
          ga('send', 'event', category, 'supported');
        } else {
          hideSubscribe();
          ga('send', 'event', category, 'not-supported');
        }
        OneSignal.isPushNotificationsEnabled(function(isEnabled) {
          if (isEnabled) {
            hideSubscribe();
          } else {
            showSubscribe();
            //- setTimeout(subscribeToNotifications, 1000*2)
          }
        });
      });